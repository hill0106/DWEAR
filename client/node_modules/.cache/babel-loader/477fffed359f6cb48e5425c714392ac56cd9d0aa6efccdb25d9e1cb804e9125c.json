{"ast":null,"code":"var _jsxFileName = \"/Users/alex87/Documents/Web/DWEAR/client/src/stories/Button.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './button.css';\n\n/**\n * Primary UI component for user interaction\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = ({\n  primary,\n  backgroundColor,\n  size,\n  label,\n  ...props\n}) => {\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    className: ['storybook-button', `storybook-button--${size}`, mode].join(' '),\n    style: backgroundColor && {\n      backgroundColor\n    },\n    ...props,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nButton.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary: PropTypes.bool,\n  /**\n   * What background color to use\n   */\n  backgroundColor: PropTypes.string,\n  /**\n   * How large should the button be?\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func\n};\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: 'medium',\n  onClick: undefined\n};\n;\nButton.__docgenInfo = {\n  \"description\": \"Primary UI component for user interaction\",\n  \"methods\": [],\n  \"displayName\": \"Button\",\n  \"props\": {\n    \"backgroundColor\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"description\": \"What background color to use\",\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false\n    },\n    \"primary\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"description\": \"Is this the principal call to action on the page?\",\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false\n    },\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"'medium'\",\n        \"computed\": false\n      },\n      \"description\": \"How large should the button be?\",\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'small'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'medium'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'large'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false\n    },\n    \"onClick\": {\n      \"defaultValue\": {\n        \"value\": \"undefined\",\n        \"computed\": true\n      },\n      \"description\": \"Optional click handler\",\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false\n    },\n    \"label\": {\n      \"description\": \"Button contents\",\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Button","primary","backgroundColor","size","label","props","mode","type","className","join","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","bool","string","oneOf","isRequired","onClick","func","defaultProps","undefined"],"sources":["/Users/alex87/Documents/Web/DWEAR/client/src/stories/Button.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './button.css';\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({ primary, backgroundColor, size, label, ...props }) => {\n  const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n  return (\n    <button\n      type=\"button\"\n      className={['storybook-button', `storybook-button--${size}`, mode].join(' ')}\n      style={backgroundColor && { backgroundColor }}\n      {...props}\n    >\n      {label}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  primary: PropTypes.bool,\n  /**\n   * What background color to use\n   */\n  backgroundColor: PropTypes.string,\n  /**\n   * How large should the button be?\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func,\n};\n\nButton.defaultProps = {\n  backgroundColor: null,\n  primary: false,\n  size: 'medium',\n  onClick: undefined,\n};\n"],"mappings":";AAAA,OAAAA,KAAA;AACA,OAAAC,SAAA;AACA;;AAEA;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAGA,aAAAC,MAAA,GAAAA,CAAA;EAAAC,OAAA;EAAAC,eAAA;EAAAC,IAAA;EAAAC,KAAA;EAAA,GAAAC;AAAA;EACA,MAAAC,IAAA,GAAAL,OAAA;EACA,oBACAF,OAAA;IACAQ,IAAA;IACAC,SAAA,4CAAAL,IAAA,IAAAG,IAAA,EAAAG,IAAA;IACAC,KAAA,EAAAR,eAAA;MAAAA;IAAA;IAAA,GACAG,KAAA;IAAAM,QAAA,EAEAP;EAAA;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA;AAEA;AAAAC,EAAA,GAZAhB,MAAA;AAcAA,MAAA,CAAAiB,SAAA;EACA;AACA;AACA;EACAhB,OAAA,EAAAJ,SAAA,CAAAqB,IAAA;EACA;AACA;AACA;EACAhB,eAAA,EAAAL,SAAA,CAAAsB,MAAA;EACA;AACA;AACA;EACAhB,IAAA,EAAAN,SAAA,CAAAuB,KAAA;EACA;AACA;AACA;EACAhB,KAAA,EAAAP,SAAA,CAAAsB,MAAA,CAAAE,UAAA;EACA;AACA;AACA;EACAC,OAAA,EAAAzB,SAAA,CAAA0B;AACA;AAEAvB,MAAA,CAAAwB,YAAA;EACAtB,eAAA;EACAD,OAAA;EACAE,IAAA;EACAmB,OAAA,EAAAG;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}